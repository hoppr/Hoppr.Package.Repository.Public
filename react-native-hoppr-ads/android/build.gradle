buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Hoppr_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"


def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Hoppr_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Hoppr_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    multiDexEnabled true
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  //  packagingOptions {
  //       pickFirst '**/libc++_shared.so'
  //       pickFirst '**/libfbjni.so'
  //   }
    packagingOptions {
        pickFirst '**/arm64-v8a/libfbjni.so'
        pickFirst '**/arm64-v8a/libc++_shared.so'
        pickFirst '**/armeabi-v7a/libc++_shared.so'
        pickFirst '**/armeabi-v7a/libfbjni.so'
        pickFirst '**/x86/libc++_shared.so'
        pickFirst '**/x86/libfbjni.so'
        pickFirst '**/x86_64/libc++_shared.so'
        pickFirst '**/x86_64/libfbjni.so'
    }

}

allprojects {
      def REACT_NATIVE_VERSION = new File(['node', '--print',"JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim())

  configurations.all {
    resolutionStrategy {
      //force 'com.facebook.react:react-native:0.71.+' //select Version you used
            force "com.facebook.react:react-native:" + REACT_NATIVE_VERSION
    }
  }
}

repositories {
  mavenCentral()
  google()
  gradlePluginPortal()
//  jcenter()
}

// allprojects {
//     repositories {
//        exclusiveContent {
//            // We get React Native's Android binaries exclusively through npm,
//            // from a local Maven repo inside node_modules/react-native/.
//            // (The use of exclusiveContent prevents looking elsewhere like Maven Central
//            // and potentially getting a wrong version.)
//            filter {
//                includeGroup "com.facebook.react"
//            }
//            forRepository {
//                maven {
//                    url "$rootDir/../node_modules/react-native/android"
//                }
//            }
//        }
//         // ...
//     }
// }

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:0.71.+"
  implementation 'androidx.multidex:multidex:2.0.1'
  implementation 'androidx.appcompat:appcompat:1.6.1'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'com.google.android.exoplayer:exoplayer-core:2.18.5'
  implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.5'
  implementation 'com.google.android.exoplayer:extension-ima:2.18.5'
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "HopprView"
    codegenJavaPackageName = "com.hoppr"
  }
}
